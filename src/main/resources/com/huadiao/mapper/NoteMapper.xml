<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huadiao.mapper.NoteMapper">

    <!--新增笔记-->
    <insert id="insertNewNoteByUid">
        insert into huadiao_note(`note_id`, `uid`, `note_title`, `note_content`, `publish_time`, `status`,
                                 `modify_times`)
        values (#{noteId}, #{uid}, #{noteTitle}, #{noteContent}, now(), 1, 0)
        on duplicate key update `modify_date`  = now(),
                                `modify_times` = `modify_times` + 1,
                                `note_title`   = #{noteTitle},
                                `note_content` = #{noteContent};
    </insert>

    <!--删除笔记-->
    <delete id="deleteNoteByUidAndNoteId">
        delete
        from huadiao_note
        where `uid` = #{uid}
          and `note_id` = #{noteId};
    </delete>

    <resultMap id="singleNoteDtoResultMap" type="com.huadiao.entity.dto.note.ShareNoteDto">
        <result property="noteId" column="note_id"/>
        <result property="noteTitle" column="note_title"/>
        <result property="noteContent" column="note_content"/>
        <result property="publishTime" column="publish_time"/>
        <result property="likeNumber" column="like_number"/>
        <result property="unlikeNumber" column="unlike_number"/>
        <result property="viewNumber" column="view_number"/>
    </resultMap>
    <!--查找笔记-->
    <select id="selectNoteByUidAndNoteId" resultMap="singleNoteDtoResultMap">
        select t1.`uid`,
               t1.`note_id`,
               `note_title`,
               `note_content`,
               `publish_time`,
               count(t2.uid) as `like_number`,
               count(t3.uid) as `unlike_number`,
               count(t4.uid) as `view_number`
        from huadiao_note t1
                 left join huadiao_note_like t2 on t1.uid = t2.author_uid
                 left join huadiao_note_unlike t3 on t1.uid = t3.author_uid
                 left join huadiao_note_view t4 on t1.uid = t4.author_uid
        where t1.`uid` = #{uid}
          and t1.`note_id` = #{noteId};
    </select>

    <!--计数笔记-->
    <select id="countNoteByUid" resultType="java.lang.Integer">
        select count(1)
        from huadiao_note
        where uid = #{uid};
    </select>

    <resultMap id="noteDetailsResultMap" type="com.huadiao.entity.dto.note.ShareNoteDto">
        <result property="noteTitle" column="note_title"/>
        <result property="noteContent" column="note_content"/>
        <result property="publishTime" column="publish_time"/>
        <result property="noteId" column="note_id"/>
        <result property="likeNumber" column="like_number"/>
        <result property="unlikeNumber" column="unlike_number"/>
        <result property="viewNumber" column="view_number"/>
    </resultMap>
    <!--获取用户全部笔记-->
    <select id="selectAllNoteByUid" resultMap="noteDetailsResultMap">
        SELECT n.uid,
               n.note_id,
               n.note_title,
               n.note_content,
               n.publish_time,
               COUNT(l.uid) AS like_number,
               COUNT(u.uid) AS unlike_number,
               COUNT(v.uid) AS view_number
        FROM huadiao_note n
                 LEFT JOIN huadiao_note_like l ON n.note_id = l.note_id
                 LEFT JOIN huadiao_note_unlike u ON n.note_id = u.note_id
                 LEFT JOIN huadiao_note_view v ON n.note_id = v.note_id
        WHERE n.uid = #{uid}
        GROUP BY n.uid, n.note_id;
    </select>

    <!--获取笔记喜欢次数-->
    <select id="countNoteLikeByUid" resultType="java.lang.Integer">
        select count(1)
        from huadiao_note_like
        where `author_uid` = #{authorUid}
          and `status` = 1
          and `note_id` = #{noteId};
    </select>

    <!--获取笔记被不喜欢次数-->
    <select id="countNoteUnlikeByUid" resultType="java.lang.Integer">
        select count(1)
        from huadiao_note_unlike
        where `author_uid` = #{authorUid}
          and `status` = 1
          and `note_id` = #{noteId};
    </select>

    <!--获取笔记被访问次数-->
    <select id="countNoteViewByUid" resultType="java.lang.Integer">
        select count(1)
        from huadiao_note_view
        where `author_uid` = #{authorUid}
          and `status` = 1
          and `note_id` = #{noteId};
    </select>

    <!--判断当前用户是否点赞过某个笔记-->
    <select id="selectMyLikeWithNote" resultType="java.lang.Integer">
        select `uid`
        from huadiao_note_like
        where `note_id` = #{noteId}
          and `author_uid` = #{authorUid}
          and `status` = 1
          and `uid` = #{uid};
    </select>

    <!--判断当前用户是否不喜欢过某个笔记-->
    <select id="selectMyUnlikeWithNote" resultType="java.lang.Integer">
        select `uid`
        from huadiao_note_unlike
        where `note_id` = #{noteId}
          and `author_uid` = #{authorUid}
          and `status` = 1
          and `uid` = #{uid};
    </select>

    <!--判断作者 uid 是否存在 noteId 的笔记-->
    <select id="selectAuthorUid" resultType="java.lang.Integer">
        select `uid`
        from huadiao_note
        where `uid` = #{uid}
          and `note_id` = #{noteId};
    </select>

    <!--判断笔记是否存在, 由于返回类型为 bool, 所以要求 sql 语句只能返回 0 和 1 两个数字-->
    <select id="selectExistByNoteIdAndUid" resultType="java.lang.Boolean">
        select if(count(`uid`) = 1, 1, 0)
        from huadiao_note
        where `uid` = #{uid}
          and `note_id` = #{noteId}
    </select>

</mapper>

