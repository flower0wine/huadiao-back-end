<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
">

    <!--引入外部 properties 文件-->
    <context:property-placeholder location="classpath:mysql.properties, classpath:properties/huadiaoConfig.properties"/>

    <!--数据源配置-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${mysql.driverClassName}"/>
        <property name="url" value="${mysql.url}"/>
        <property name="username" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>
    </bean>

    <bean id="sqlSessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--设置数据源-->
        <property name="dataSource" ref="dataSource" />
        <!--引入 mybatis 配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--设置 mybatis 映射文件的路径, 接口 mapper 路径与 mapper 映射文件路径不同时指定-->
        <!--<property name="mapperLocations" value="classpath:com/huadiao/mapper/*.xml" />-->
    </bean>

    <!--为 mapper 接口生成代理实现类, 配置了下面标签就不需要配置 mapperLocations, 只有包路径不同才需要配置-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.huadiao.mapper"/>
    </bean>

    <!--事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--文件解析器, 依赖 common-fileupload jar包-->
    <!--在 springmvc 中, 文件解析器名称固定-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

    <!--使用 spring 事务注解需要开启事务注解驱动-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--redis 连接池-->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig">
            <bean class="redis.clients.jedis.JedisPoolConfig"/>
        </constructor-arg>
        <constructor-arg name="host" value="${jedis.host}"/>
        <constructor-arg name="port" value="${jedis.port}"/>
    </bean>


</beans>